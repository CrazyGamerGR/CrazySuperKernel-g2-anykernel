#!/sbin/sh
# AnyKernel2 by @osm0sis
# Enhanced by CrazyGamerGR

OUTFD=/proc/self/fd/$2;
ZIP="$3";
DIR=`dirname "$ZIP"`;

# Functions
ui_print() {
  until [ ! "$1" ]; do
    echo -e "ui_print $1\nui_print" > $OUTFD;
    shift;
  done;
}
show_progress() { echo "progress $1 $2" > $OUTFD; }
set_perm_recursive() {
  dirs=$(echo $* | $bb awk '{ print substr($0, index($0,$5)) }');
  for i in $dirs; do
    chown -R $1.$2 $i; chown -R $1:$2 $i;
    find "$i" -type d -exec chmod $3 {} +;
    find "$i" -type f -exec chmod $4 {} +;
  done;
}
file_getprop() { grep "^$2" "$1" | cut -d= -f2; }
getprop() { test -e /sbin/getprop && /sbin/getprop $1 || file_getprop /default.prop $1; }
abort() { ui_print "$*"; umount /system; umount /data; exit 1; }

# Actions
show_progress 1.34 4;
ui_print "";
ui_print "";
ui_print "";
ui_print "     		 ________     __   ___             ";
ui_print "    		/ ______|    |  | /  |             ";
ui_print "    		|  |         |  |/  /              ";
ui_print "    		|  |_____    |      \              ";
ui_print "    		\_______|    |__|\___|             ";
ui_print "";
ui_print "       ### CrazySuperKernel by @CrazyGamerGR ### ";
ui_print "";
ui_print "";
mkdir -p /tmp/anykernel/bin;
cd /tmp/anykernel;
unzip -o "$ZIP";
if [ $? != 0 -o -z "$(ls /tmp/anykernel/tools)" ]; then
  abort "Unzip failed. Aborting...";
fi;
chmod -R 755 /tmp/anykernel/tools /tmp/anykernel/bin;
bb=/tmp/anykernel/tools/busybox;

ui_print "Mounting system and data partitions...";
mount -t auto -o ro /system;
mount /data;

# This goes before the installation process to ensure the user has the needed binaries.
if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.binaries)" == 1 ]; then
  ui_print "Pushing binaries...";
  cp -f /tmp/anykernel/tools/getprop /sbin/getprop;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.devicecheck)" == 1 ]; then
  ui_print "Checking device...";
  for i in 1 2 3 4 5 6 7 8; do
    testname="$(file_getprop /tmp/anykernel/anykernel.sh device.name$i)";
    if [ "$(getprop ro.product.device)" == "$testname" -o "$(getprop ro.build.product)" == "$testname" ]; then
      ui_print "Your $testname is supported!";
      ui_print "Passed!";
      match=1;
    fi;
  done;
  if [ "$match" != 1 ]; then
    abort "Sorry, your device is not supported. Aborting...";
  fi;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.initd)" == 1 ]; then
  mount -t auto -o rw,remount /system;
  ui_print "Creating init.d...";
  mkdir /system/etc/init.d;
  set_perm_recursive 0 0 0755 0755 /system/etc/init.d;
  mount -t auto -o ro,remount /system;
fi;

ui_print "Installing the kernel...";
for i in $($bb --list); do
  $bb ln -s $bb /tmp/anykernel/bin/$i;
done;
if [ $? != 0 -o -z "$(ls /tmp/anykernel/bin)" ]; then
  abort "Recovery busybox setup failed. Aborting...";
fi;
PATH="/tmp/anykernel/bin:$PATH" $bb ash /tmp/anykernel/anykernel.sh $2;
if [ $? != "0" ]; then
  abort "Something went wrong. Aborting...";
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.cleanup)" == 1 ]; then
  ui_print "Removing installation files...";
  rm -rf /tmp/anykernel;
fi;

umount /system;
umount /data;
ui_print " ";
ui_print "Enjoy your CrazySuperKernel";
ui_print " ";
